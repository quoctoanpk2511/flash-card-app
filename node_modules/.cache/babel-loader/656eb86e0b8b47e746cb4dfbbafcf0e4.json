{"ast":null,"code":"var _jsxFileName = \"/home/quoctoan/STUDYING/20192/\\u65E5\\u672C\\u8A9EITSS\\uFF11/japanese_flash_card/src/CardContainer.js\";\nimport React, { Component } from 'react';\nimport Card from \"./Card.js\";\nimport CreateCard from \"./CreateCard.js\"; // import './ToDoListItem.css';\n\nclass CardContainer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      cards: Immutable.fromJS([{\n        word: 'Jazz',\n        description: 'A type of music of black American origin characterized by improvisation, syncopation, and usually a regular or forceful rhythm, emerging at the beginning of the 20th century.'\n      }, {\n        word: 'Reggae',\n        description: 'Music like Bob Marley, man.'\n      }, {\n        word: 'Folk',\n        description: 'Music like Bob Dylan, man.'\n      }]),\n      cardNumber: 0\n    };\n    this.boundCallback = this.hideCreateCard.bind(this);\n    this.boundCreateCard = this.setCard.bind(this);\n    this.boundShowPrevCard = this.showPrevCard.bind(this);\n    this.boundShowNextCard = this.showNextCard.bind(this);\n  }\n\n  hideCreateCard() {\n    this.setState({\n      showModal: false\n    });\n  }\n\n  showNextCard() {\n    if (this.state.cardNumber + 1 !== this.state.cards.size) {\n      this.setState({\n        cardNumber: this.state.cardNumber += 1\n      });\n    }\n  }\n\n  showPrevCard() {\n    if (this.state.cardNumber !== 0) {\n      this.setState({\n        cardNumber: this.state.cardNumber -= 1\n      });\n    }\n  }\n\n  setCard(card) {\n    const newCards = this.state.cards.push(card);\n    this.setState({\n      cards: newCards\n    });\n  }\n\n  generateDots() {\n    const times = this.state.cards.size;\n    let arr = [];\n\n    _.times(times).forEach(num => {\n      const dotClass = num === this.state.cardNumber ? 'active' : '';\n      arr.push( /*#__PURE__*/React.createElement(\"span\", {\n        className: `card-container__dot fa fa-circle ${dotClass}`,\n        onClick: () => this.setState({\n          cardNumber: num\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }\n      }));\n    });\n\n    return arr;\n  }\n\n  generateCards() {\n    const cards = this.state.cards;\n    const cardsList = cards.map(card => {\n      return /*#__PURE__*/React.createElement(Card, {\n        frontContent: card.get('word'),\n        backContent: card.get('description'),\n        showNextCard: this.boundShowNextCard,\n        showPrevCard: this.boundShowPrevCard,\n        cardNumber: this.state.cardNumber,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      });\n    });\n    return cardsList.toJS()[this.state.cardNumber];\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"card-container__icon  fa fa-plus\",\n      onClick: () => {\n        this.setState({\n          showModal: !this.state.showModal\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }), this.state.showModal ? /*#__PURE__*/React.createElement(CreateCard, {\n      onShadowClick: this.boundCallback,\n      onCreateCard: this.boundCreateCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }) : '', this.generateCards(), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-container__dots-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, this.generateDots()));\n  }\n\n}\n\nexport default CardContainer;","map":{"version":3,"sources":["/home/quoctoan/STUDYING/20192/日本語ITSS１/japanese_flash_card/src/CardContainer.js"],"names":["React","Component","Card","CreateCard","CardContainer","constructor","state","cards","Immutable","fromJS","word","description","cardNumber","boundCallback","hideCreateCard","bind","boundCreateCard","setCard","boundShowPrevCard","showPrevCard","boundShowNextCard","showNextCard","setState","showModal","size","card","newCards","push","generateDots","times","arr","_","forEach","num","dotClass","generateCards","cardsList","map","get","toJS","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,UAAP,MAAuB,iBAAvB,C,CACA;;AAEA,MAAMC,aAAN,SAA4BH,SAA5B,CAAsC;AAClCI,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAEC,SAAS,CAACC,MAAV,CAAiB,CAAC;AACvBC,QAAAA,IAAI,EAAE,MADiB;AAEvBC,QAAAA,WAAW,EAAE;AAFU,OAAD,EAGrB;AACDD,QAAAA,IAAI,EAAE,QADL;AAEDC,QAAAA,WAAW,EAAE;AAFZ,OAHqB,EAMrB;AACDD,QAAAA,IAAI,EAAE,MADL;AAEDC,QAAAA,WAAW,EAAE;AAFZ,OANqB,CAAjB,CADI;AAYXC,MAAAA,UAAU,EAAE;AAZD,KAAb;AAcA,SAAKC,aAAL,GAAqB,KAAKC,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAArB;AACA,SAAKC,eAAL,GAAuB,KAAKC,OAAL,CAAaF,IAAb,CAAkB,IAAlB,CAAvB;AACA,SAAKG,iBAAL,GAAyB,KAAKC,YAAL,CAAkBJ,IAAlB,CAAuB,IAAvB,CAAzB;AACA,SAAKK,iBAAL,GAAyB,KAAKC,YAAL,CAAkBN,IAAlB,CAAuB,IAAvB,CAAzB;AACD;;AAEDD,EAAAA,cAAc,GAAG;AACf,SAAKQ,QAAL,CAAc;AAACC,MAAAA,SAAS,EAAE;AAAZ,KAAd;AACD;;AAEDF,EAAAA,YAAY,GAAG;AACb,QAAK,KAAKf,KAAL,CAAWM,UAAX,GAAwB,CAAzB,KAAgC,KAAKN,KAAL,CAAWC,KAAX,CAAiBiB,IAArD,EAA2D;AACzD,WAAKF,QAAL,CAAc;AAACV,QAAAA,UAAU,EAAE,KAAKN,KAAL,CAAWM,UAAX,IAAyB;AAAtC,OAAd;AACD;AACF;;AAEDO,EAAAA,YAAY,GAAG;AACb,QAAI,KAAKb,KAAL,CAAWM,UAAX,KAA0B,CAA9B,EAAiC;AAC/B,WAAKU,QAAL,CAAc;AAACV,QAAAA,UAAU,EAAE,KAAKN,KAAL,CAAWM,UAAX,IAAyB;AAAtC,OAAd;AACD;AACF;;AAEDK,EAAAA,OAAO,CAACQ,IAAD,EAAO;AACZ,UAAMC,QAAQ,GAAG,KAAKpB,KAAL,CAAWC,KAAX,CAAiBoB,IAAjB,CAAsBF,IAAtB,CAAjB;AACA,SAAKH,QAAL,CAAc;AAACf,MAAAA,KAAK,EAAEmB;AAAR,KAAd;AACD;;AAEDE,EAAAA,YAAY,GAAG;AACb,UAAMC,KAAK,GAAG,KAAKvB,KAAL,CAAWC,KAAX,CAAiBiB,IAA/B;AACA,QAAIM,GAAG,GAAG,EAAV;;AACAC,IAAAA,CAAC,CAACF,KAAF,CAAQA,KAAR,EAAeG,OAAf,CAAwBC,GAAD,IAAS;AAC9B,YAAMC,QAAQ,GAAGD,GAAG,KAAM,KAAK3B,KAAL,CAAWM,UAApB,GAAiC,QAAjC,GAA4C,EAA7D;AACAkB,MAAAA,GAAG,CAACH,IAAJ,eACE;AACE,QAAA,SAAS,EAAG,oCAAmCO,QAAS,EAD1D;AAEE,QAAA,OAAO,EAAE,MAAM,KAAKZ,QAAL,CAAc;AAACV,UAAAA,UAAU,EAAEqB;AAAb,SAAd,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAMD,KARD;;AASA,WAAOH,GAAP;AACD;;AAEDK,EAAAA,aAAa,GAAG;AACd,UAAM5B,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAzB;AACC,UAAM6B,SAAS,GAAG7B,KAAK,CAAC8B,GAAN,CAAWZ,IAAD,IAAU;AACnC,0BACE,oBAAC,IAAD;AACE,QAAA,YAAY,EAAEA,IAAI,CAACa,GAAL,CAAS,MAAT,CADhB;AAEE,QAAA,WAAW,EAAEb,IAAI,CAACa,GAAL,CAAS,aAAT,CAFf;AAGE,QAAA,YAAY,EAAE,KAAKlB,iBAHrB;AAIE,QAAA,YAAY,EAAI,KAAKF,iBAJvB;AAKE,QAAA,UAAU,EAAE,KAAKZ,KAAL,CAAWM,UALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AASD,KAVgB,CAAlB;AAWA,WAAOwB,SAAS,CAACG,IAAV,GAAiB,KAAKjC,KAAL,CAAWM,UAA5B,CAAP;AACF;;AACD4B,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACI,MAAA,SAAS,EAAC,kCADd;AAEI,MAAA,OAAO,EAAE,MAAM;AACb,aAAKlB,QAAL,CAAc;AAACC,UAAAA,SAAS,EAAE,CAAC,KAAKjB,KAAL,CAAWiB;AAAxB,SAAd;AACD,OAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOG,KAAKjB,KAAL,CAAWiB,SAAX,gBACG,oBAAC,UAAD;AACE,MAAA,aAAa,EAAE,KAAKV,aADtB;AAEE,MAAA,YAAY,EAAE,KAAKG,eAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,GAKG,EAZN,EAaG,KAAKmB,aAAL,EAbH,eAcE;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKP,YAAL,EADH,CAdF,CADF;AAoBD;;AA/FiC;;AAkGtC,eAAexB,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport Card from \"./Card.js\"\nimport CreateCard from \"./CreateCard.js\"\n// import './ToDoListItem.css';\n\nclass CardContainer extends Component {\n    constructor() {\n      super();\n      this.state = {\n        cards: Immutable.fromJS([{\n          word: 'Jazz',\n          description: 'A type of music of black American origin characterized by improvisation, syncopation, and usually a regular or forceful rhythm, emerging at the beginning of the 20th century.',\n        }, {\n          word: 'Reggae',\n          description: 'Music like Bob Marley, man.',\n        }, {\n          word: 'Folk',\n          description: 'Music like Bob Dylan, man.',\n        }\n      ]),\n        cardNumber: 0\n      };\n      this.boundCallback = this.hideCreateCard.bind(this);\n      this.boundCreateCard = this.setCard.bind(this);\n      this.boundShowPrevCard = this.showPrevCard.bind(this);\n      this.boundShowNextCard = this.showNextCard.bind(this);\n    }\n    \n    hideCreateCard() {\n      this.setState({showModal: false});\n    }\n    \n    showNextCard() {\n      if ((this.state.cardNumber + 1) !== this.state.cards.size) {\n        this.setState({cardNumber: this.state.cardNumber += 1});\n      }\n    }\n    \n    showPrevCard() {\n      if (this.state.cardNumber !== 0) {\n        this.setState({cardNumber: this.state.cardNumber -= 1});\n      }\n    }\n    \n    setCard(card) {\n      const newCards = this.state.cards.push(card);\n      this.setState({cards: newCards});\n    }\n    \n    generateDots() {\n      const times = this.state.cards.size;\n      let arr = [];\n      _.times(times).forEach((num) => {\n        const dotClass = num  === this.state.cardNumber ? 'active' : '';\n        arr.push(\n          <span \n            className={`card-container__dot fa fa-circle ${dotClass}`}\n            onClick={() => this.setState({cardNumber: num})}\n          />\n        )\n      });\n      return arr;\n    }\n    \n    generateCards() {\n      const cards = this.state.cards;\n       const cardsList = cards.map((card) => {\n          return (\n            <Card \n              frontContent={card.get('word')}\n              backContent={card.get('description')}\n              showNextCard={this.boundShowNextCard}\n              showPrevCard = {this.boundShowPrevCard}\n              cardNumber={this.state.cardNumber}\n            />\n            );\n        })\n       return(cardsList.toJS()[this.state.cardNumber]); \n    }\n    render() {\n      return (\n        <div>\n          <span \n              className='card-container__icon  fa fa-plus' \n              onClick={() => {\n                this.setState({showModal: !this.state.showModal});\n              }}\n            />\n          {this.state.showModal \n            ? <CreateCard \n                onShadowClick={this.boundCallback}\n                onCreateCard={this.boundCreateCard}\n              /> \n            : ''}\n          {this.generateCards()}\n          <div className='card-container__dots-wrapper'>\n            {this.generateDots()}\n          </div>\n        </div>\n     );\n    }\n  }\n\nexport default CardContainer;"]},"metadata":{},"sourceType":"module"}